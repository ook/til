<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/til/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/til/" rel="alternate" type="text/html" /><updated>2024-01-07T21:19:27+01:00</updated><id>http://localhost:4000/til/feed.xml</id><title type="html">TIL: Today I learned</title><subtitle>I believe that a day without learning anything is a waste. Let&apos;s measure my year.</subtitle><entry><title type="html">PGPool2</title><link href="http://localhost:4000/til/til/postgreql/database/2024/01/07/pgpool2.html" rel="alternate" type="text/html" title="PGPool2" /><published>2024-01-07T21:12:03+01:00</published><updated>2024-01-07T21:12:03+01:00</updated><id>http://localhost:4000/til/til/postgreql/database/2024/01/07/pgpool2</id><content type="html" xml:base="http://localhost:4000/til/til/postgreql/database/2024/01/07/pgpool2.html"><![CDATA[<p>I used to setup postgresql native streaming replication. Since major 12 it’s rather easy task and I was happy  with it.</p>

<p>I was searching a nice way to load balance PG queries when I hit PGPool2. I heard about it long time ago when it was only a pooling system: that’s certainly why I missed its evolutions. Now it offers connection pooling (meh), replication (hmm), auto PG failover (w00t), load balancing (now we talk) and even HA from 3 instances of PGPool (gold!).</p>]]></content><author><name></name></author><category term="til" /><category term="postgreql" /><category term="database" /><summary type="html"><![CDATA[I used to setup postgresql native streaming replication. Since major 12 it’s rather easy task and I was happy with it.]]></summary></entry><entry><title type="html">Today, I start to share what I learn.</title><link href="http://localhost:4000/til/first%20intent/2024/01/07/today-I-start-to-learn.html" rel="alternate" type="text/html" title="Today, I start to share what I learn." /><published>2024-01-07T21:10:03+01:00</published><updated>2024-01-07T21:10:03+01:00</updated><id>http://localhost:4000/til/first%20intent/2024/01/07/today%E2%80%93I%E2%80%93start%E2%80%93to%E2%80%93learn</id><content type="html" xml:base="http://localhost:4000/til/first%20intent/2024/01/07/today-I-start-to-learn.html"><![CDATA[<p>I’m convinced that a day you learned nothing is a waste. I will keep track of my discoveries here to share with you, Internet, and to measure the quality of my time.</p>]]></content><author><name></name></author><category term="first intent" /><summary type="html"><![CDATA[I’m convinced that a day you learned nothing is a waste. I will keep track of my discoveries here to share with you, Internet, and to measure the quality of my time.]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/til/jekyll/update/2024/01/07/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2024-01-07T17:42:03+01:00</published><updated>2024-01-07T17:42:03+01:00</updated><id>http://localhost:4000/til/jekyll/update/2024/01/07/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/til/jekyll/update/2024/01/07/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry></feed>